import unittest
import gear
from gear import Number

class TestGear(unittest.TestCase):
    def test_matrix(self):
        matrix_input = "467..114..\n...*......\n..35..633.\n......#...\n617*......\n.....+.58.\n..592.....\n......755.\n...$.*....\n.664.598..\n"

        matrix_output = [
            ["4", "6", "7", ".", ".", "1", "1", "4", ".", "."],
            [".", ".", ".", "*", ".", ".", ".", ".", ".", "."],
            [".", ".", "3", "5", ".", ".", "6", "3", "3", "."],
            [".", ".", ".", ".", ".", ".", "#", ".", ".", "."],
            ["6", "1", "7", "*", ".", ".", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", "+", ".", "5", "8", "."],
            [".", ".", "5", "9", "2", ".", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", ".", "7", "5", "5", "."],
            [".", ".", ".", "$", ".", "*", ".", ".", ".", "."],
            [".", "6", "6", "4", ".", "5", "9", "8", ".", "."],
        ]
        self.assertEqual(gear.matrix(matrix_input), matrix_output)

    def test_get_value(self):
        matrix = [
            ["4", "6", "7", ".", ".", "1", "1", "4", ".", "."],
            [".", ".", ".", "*", ".", ".", ".", ".", ".", "."],
            [".", ".", "3", "5", ".", ".", "6", "3", "3", "."],
            [".", ".", ".", ".", ".", ".", "#", ".", ".", "."],
            ["6", "1", "7", "*", ".", ".", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", "+", ".", "5", "8", "."],
            [".", ".", "5", "9", "2", ".", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", ".", "7", "5", "5", "."],
            [".", ".", ".", "$", ".", "*", ".", ".", ".", "."],
            [".", "6", "6", "4", ".", "5", "9", "8", ".", "."],
        ]
        
        case1 = Number(matrix, 0, 0)
        case2 = Number(matrix, 0, 6)
        case3 = Number(matrix, 2, 2)
        case4 = Number(matrix, 6, 4)
        case5 = Number(matrix, 9, 2)
        self.assertEqual(case1.value, 467)
        self.assertEqual(case2.value, 114)
        self.assertEqual(case3.value, 35)
        self.assertEqual(case4.value, 592)
        self.assertEqual(case5.value, 664)

    def test_get_columns(self):
        matrix = [
            ["4", "6", "7", ".", ".", "1", "1", "4", ".", "."],
            [".", ".", ".", "*", ".", ".", ".", ".", ".", "."],
            [".", ".", "3", "5", ".", ".", "6", "3", "3", "."],
            [".", ".", ".", ".", ".", ".", "#", ".", ".", "."],
            ["6", "1", "7", "*", ".", ".", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", "+", ".", "5", "8", "."],
            [".", ".", "5", "9", "2", ".", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", ".", "7", "5", "5", "."],
            [".", ".", ".", "$", ".", "*", ".", ".", ".", "."],
            [".", "6", "6", "4", ".", "5", "9", "8", ".", "."],
        ]
        
        case1 = Number(matrix, 0, 0)
        case2 = Number(matrix, 0, 6)
        case3 = Number(matrix, 2, 2)
        case4 = Number(matrix, 6, 4)
        case5 = Number(matrix, 9, 2)
        self.assertEqual(case1.columns, {0, 1, 2})
        self.assertEqual(case2.columns, {5, 6, 7})
        self.assertEqual(case3.columns, {2, 3})
        self.assertEqual(case4.columns, {2, 3, 4})
        self.assertEqual(case5.columns, {1, 2, 3})

    def test_is_part(self):
        matrix = [
            ["4", "6", "7", ".", ".", "1", "1", "4", ".", "."],
            [".", ".", ".", "*", ".", ".", ".", ".", ".", "."],
            [".", ".", "3", "5", ".", ".", "6", "3", "3", "."],
            [".", ".", ".", ".", ".", ".", "#", ".", ".", "."],
            ["6", "1", "7", "*", ".", ".", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", "+", ".", "5", "8", "."],
            [".", ".", "5", "9", "2", ".", ".", ".", ".", "."],
            [".", ".", ".", ".", ".", ".", "7", "5", "5", "."],
            [".", ".", ".", "$", ".", "*", ".", ".", ".", "."],
            [".", "6", "6", "4", ".", "5", "9", "8", ".", "."],
        ]
        
        case1 = Number(matrix, 0, 0)
        case2 = Number(matrix, 0, 6)
        case3 = Number(matrix, 2, 2)
        case4 = Number(matrix, 6, 4)
        case5 = Number(matrix, 5, 7)
        self.assertEqual(case1.part, True)
        self.assertEqual(case2.part, False)
        self.assertEqual(case3.part, True)
        self.assertEqual(case4.part, True)
        self.assertEqual(case5.part, False)

if __name__ == "__main__":
    unittest.main()